<?xml version="1.0" encoding= "UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
 
 <!-- sql 덩어리!!  dao들에서 얘네를 사용 --> <!-- 이거는 무슨 말인지 알았어요! -->
<mapper namespace="UserDao">
	<!-- Dao1. 여기에 알맞은 sql을 만들고, id(sql을 구분해줄수 있는)와 resultType(반환해줄 형태)를 적는다~ -->
	<!-- Dao2. 근데 where절(sql 문법을 절 이라고 표현한다!!)에 뭔가 집어넣어서 select 해야하면 parameterType을 넣는다  -->
	<!-- Dao3. 그건 parameterType="map" 이라고 항상 적으면 된다  -->
    <select id="selectAllUser" resultType="com.homeworkNotice.dto.UserDto">
    	select * from Student
    </select>    
    <select id="selectUser" resultType="com.homeworkNotice.dto.UserDto" parameterType="map">
    	select pw,email from Student where stuId = #{stuId}
    </select> 
   <!-- 여기 password 불러오는거 있으니까 굳이 여기에서는 안만들어도 됨 -->
    <select id="selectUserInfo" resultType="com.homeworkNotice.dto.UserDto" parameterType="map">
    	select * from Student where stuId=#{stuId}
    </select> 
   <insert id="insertUser" parameterType="map">
    	insert into Student(name,stuId,semester,pw,email) values ( #{name},#{stuId},#{semester},#{pw},#{email})
    </insert>
    <update id="updatePw">
    	update Student set pw=#{pw} where stuId=#{stuId}
    </update>
    <update id="updateUser">
    	update Student set name=#{name},semester=#{semester},pw=#{pw},email=#{email} where stuId=#{stuId}
    </update>
    
    
    <delete id="deleteUser" parameterType="map">
    	delete from Student where stuId=#{stuId}
    </delete>
    
    
    <!--
        로그인된 경우 해당 세션id와 유효시간을 사용자 테이블에 세팅한다. 이 밑에가 지현이가 코딩한부분
     -->
    <update id="keepLogin">
        update Student set sessionKey = #{sessionId}, sessionLimit = #{next} where stuId=#{stuId}
    </update>
    
    <!--
        유효기간이 남아 있으면서 해당 sessionId를 가지는 사용자 정보를 꺼내오는 부분
     
    <select id="checkUserWithSessionKey" resultType="UserVO">
        select * from Student where sessionKey = #{sessionId} and sessionLimit > now()
    </select>
	-->

</mapper>
